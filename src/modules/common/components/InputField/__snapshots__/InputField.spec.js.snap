// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputField matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <InputField
    boundValue=""
    disabled={false}
    error=""
    label="Whatever"
    name="text"
    onInputChange={[Function]}
    placeholder=""
    type="text"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="text"
>
          Whatever
          :
</label>,
        <input
          className=""
          disabled={false}
          id="text"
          maxLength={255}
          name="text"
          onChange={[Function]}
          placeholder=""
          type="text"
          value=""
/>,
        "",
      ],
      "className": "input-field",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Whatever",
            ":",
          ],
          "htmlFor": "text",
        },
        "ref": null,
        "rendered": Array [
          "Whatever",
          ":",
        ],
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "",
          "disabled": false,
          "id": "text",
          "maxLength": 255,
          "name": "text",
          "onChange": [Function],
          "placeholder": "",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      "",
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="text"
>
            Whatever
            :
</label>,
          <input
            className=""
            disabled={false}
            id="text"
            maxLength={255}
            name="text"
            onChange={[Function]}
            placeholder=""
            type="text"
            value=""
/>,
          "",
        ],
        "className": "input-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Whatever",
              ":",
            ],
            "htmlFor": "text",
          },
          "ref": null,
          "rendered": Array [
            "Whatever",
            ":",
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "",
            "disabled": false,
            "id": "text",
            "maxLength": 255,
            "name": "text",
            "onChange": [Function],
            "placeholder": "",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "",
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
